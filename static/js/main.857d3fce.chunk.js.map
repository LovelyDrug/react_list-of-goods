{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isStarted","isReversed","sortType","NONE","this","reordered","goods","visibleGoods","ALPABET","sort","good1","good2","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,kFAbCC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAb,4MACEC,MAAe,CACbC,WAAW,EACXC,YAAY,EACZC,SAAUN,EAASO,MAJvB,4CAOE,WAAU,IAAD,OACP,EAA4CC,KAAKL,MAAzCE,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAAUF,EAA9B,EAA8BA,UACxBK,EArCV,SACEC,EACAJ,EACAD,GAGA,IAAMM,EAAY,YAAOD,GAYzB,OAVIJ,IAAaN,EAASY,QACxBD,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MAC/CT,IAAaN,EAASiB,QAC/BN,EAAaE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAGvDb,GACFM,EAAaQ,UAGRR,EAmBaS,CAChBnB,EACAK,EACAD,GAGF,OAAKD,EAcH,sBAAKiB,UAAU,MAAf,UACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUN,EAASY,WAFpD,iCAMA,wBACEU,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUN,EAASiB,UAFpD,4BAMA,wBACEK,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEnB,YAAcA,KAF/C,qBAMA,wBACEiB,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAC3BlB,SAAUN,EAASO,KACnBF,YAAY,KAJhB,mBASA,oBAAIgB,UAAU,QAAd,SACGZ,EAAUgB,KAAI,SAAAC,GACb,OACE,oBACEL,UAAU,cADZ,SAIGK,GAFIA,WA7Cb,qBAAKL,UAAU,MAAf,SACE,wBACEC,KAAK,SACLC,QAAS,kBAAM,EAAKC,SAAS,CAAEpB,WAAW,KAF5C,yBAlBV,GAAyBuB,IAAMC,WCjD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.857d3fce.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport './App.css';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\n// Use this function in the render method\nfunction getReorderedGoods(\n  goods: string[],\n  sortType: SortType,\n  isReversed: boolean,\n) {\n  // Not to mutate the original array\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((good1, good2) => good1.localeCompare(good2));\n  } else if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((good1, good2) => good1.length - good2.length);\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\ntype State = {\n  isStarted: boolean,\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component {\n  state: State = {\n    isStarted: false,\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType, isStarted } = this.state;\n    const reordered = getReorderedGoods(\n      goodsFromServer,\n      sortType,\n      isReversed,\n    );\n\n    if (!isStarted) {\n      return (\n        <div className=\"App\">\n          <button\n            type=\"button\"\n            onClick={() => this.setState({ isStarted: true })}\n          >\n            Start\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ sortType: SortType.ALPABET })}\n        >\n          Sort alphabetically\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ sortType: SortType.LENGTH })}\n        >\n          Sort by length\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ isReversed: !(isReversed) })}\n        >\n          Reverse\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => this.setState({\n            sortType: SortType.NONE,\n            isReversed: false,\n          })}\n        >\n          Reset\n        </button>\n        <ul className=\"Goods\">\n          {reordered.map(good => {\n            return (\n              <li\n                className=\"Goods__item\"\n                key={good}\n              >\n                {good}\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}